// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model OrderRequest {
  id         String   @id @default(uuid())
  order_id   String
  product_id String
  quantity   Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  Product Product @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  Order   Order   @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([order_id, product_id])
}

model Order {
  id         String   @id @default(uuid())
  status     String
  user_id    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  User         User           @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  OrderRequest OrderRequest[]
}

model Product {
  id          String   @id @default(uuid())
  name        String
  image       String
  price       Decimal
  description String
  owner_id    String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  Owner        User           @relation(fields: [owner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  OrderRequest OrderRequest[]
}

model User {
  id         String   @id @default(uuid())
  username   String   @unique
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  Order   Order[]
  Product Product[]
}
